

一、Storm的原理分析
	1、Storm在ZK中保存的数据
	2、Storm任务提交的过程：命令  storm jar ****
	3、Storm内部通信的机制：Worker之间通信的基本原理

二、外部系统的集成：查看Storm的external目录
	1、集成Redis
		（*）jar包：storm-redis***.jar
		（*）Redis本身jar包
		
	3、集成HDFS
		（*）jar包：storm-hdfs***.jar
		（*）HDFS（common）本身的jar包
	
	4、集成HBase：自己开发一个Bolt组件
		（*）jar包：HBase的jar包
	
	5、集成Kafka
	2、集成JDBC：为什么一般不会集成JDBC？
	6、集成Hive
	7、集成JMS：Java Messaging Service
----------------------------------------------------------------------------------
1、Scala编程语言
	（1）语言基础
	（2）面向对象
	（3）重点：函数式编程和高级特性（泛型、隐式类，隐式函数、隐式参数等等）
	
2、Spark Core：Spark的内核，最重要的一部分
3、Spark SQL：类似Hive和Pig。数据分析引擎
4、Spark Streaming：类似Storm，本质是：不是一个流式计算，本质是一个离线计算

--------------------------------Scala编程语言-------------------------------------
一、Scala语言简介
	1、Scala是多范式的编程语言（支持多种方式的编程）
		（1）使用面向对象编程
		（2）使用函数式编程：最大的特点
				（*）函数式编程的优点：使得代码非常简介
				（*）函数式编程的缺点：可读性太差，尤其是隐式类，隐式函数、隐式参数

	2、安装配置Scala和开发环境
		（*）基于JDK，首先安装JDK
		（*）安装Scala：版本：2.11.8（Spark 2.1.0的版本一致，自带的Scala就是2.11.8）
			（1）设置环境变量: SCALA_HOME
			（2）把%SCALA_HOME%/bin目录加入PATH路径
			
		（*）开发环境
			命令行：REPL（注意：REPL类似spark-shell）
					退出  :quit
			
			IDE：(1) Scala IDE：基于Eclipse
			     (2) IDEA：需要安装Scala的插件
				 (3) Netbeans 需要安装Scala的插件

二、Scala中的数据类型和变量常量
	1、注意：任何数据都是对象
		举例：1是一个对象
		
	2、基本的数据类型
		Byte     8位有符号数字   -128 ~127
		Short    16位有符号数字 -32768 ~ 32767
		Int      32位有符号数字
		Long
		Float
		Double
		
		字符串String 字符 Char
			scala> var s1:String = "Hello World"
			s1: String = Hello World	
			
			字符串的插值操作：相当于拼加字符串
			scala> "My name is Tom  and ${s1}"
			res1: String = My name is Tom  and ${s1}

			scala> s"My name is Tom  and ${s1}"
			res2: String = My name is Tom  and Hello World

	3、定义变量（var）和常量（val）的时候，可以不用指定数据的类型
	   注意：Scala语言会自动进行类型的推导
	   	   
	4、Unit类型和Nothing类型
		（1）Unit类型：相当于Java中的void
			scala> val f = ()
			f: Unit = ()
			小括号代表一个函数，没有返回值
			
		（2）Nothing一般来说，在执行的过程中，产生了Exception
			举例：
			scala> def myfunction = throw new Exception("Some Error")
			myfunction: Nothing			

三、函数：是Scala的头等公民
	（一）Scala的内置函数：举例：求最大值
			https://www.scala-lang.org/files/archive/api/2.11.8/#package
			scala> max(1,2)
			<console>:12: error: not found: value max
				   max(1,2)
				   ^

			scala> import scala.math._
			import scala.math._

			scala> max(1,2)
			res4: Int = 2

			scala> //本质是定义了 变量来保存执行的结果

			scala> var a1:Int = max(1,2)
			a1: Int = 2

			scala> var a2 = max(1,2)
			a2: Int = 2
			
	（二）自定义函数：关键字  def
			格式： def 函数名称([参数列表:参数的类型]*):返回值的类型 = {
			
					}
			举例1:求和
				scala> def sum(x:Int,y:Int):Int = x + y
				sum: (x: Int, y: Int)Int

				scala> sum(10,20)
				res5: Int = 30

				scala> var a = sum(10,20)
				a: Int = 30
				
				
			举例2：求阶乘，采用递归
				scala> def myFactor(x:Int):Int = {
					 |    //采用阶乘
					 |    if(x <= 1)
					 |       1
					 |    else
					 |      //执行递归
					 |      x*myFactor(x-1)
					 | }
				myFactor: (x: Int)Int

				scala> myFactor(5)
				res6: Int = 120
				
				注意：没有return子句。函数的最后一句话就是函数的返回值


























